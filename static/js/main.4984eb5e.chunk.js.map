{"version":3,"sources":["global.ts","utils.ts","common.tsx","pages/Maker/action.ts","data-format-def.ts","data-trans.ts","pages/Maker/selector.tsx","pages/Maker/index.tsx","pages/Create/action.ts","pages/Create/form.tsx","pages/Test/index.tsx","pages/Create/index.tsx","pages/Index/index.tsx","pages/Auto/index.tsx","index.tsx"],"names":["GlobalContext","React","createContext","config","metadata","root","width","setRoot","data","setConfig","setMetadata","updateClientWidth","ImageCache","loadFile","path","request","XMLHttpRequest","open","send","console","log","Promise","resolve","reject","onload","readyState","status","responseText","loadImageWithoutCache","img","Image","crossOrigin","src","Math","random","e","genOutputCanvas","userData","a","images","Object","keys","map","cTitle","imageObj","index","pic","id","picId","item","canvas","document","createElement","height","ctx","getContext","fillStyle","fillRect","sort","b","drawImage","isInEvilBrowser","ua","navigator","userAgent","toLowerCase","test","SaveTextLink","props","save","saveAs","Blob","fileContent","type","filename","href","onClick","className","children","ShowLocalImage","useState","imageBase64String","setImageBase64String","imageFile","reads","FileReader","readAsDataURL","target","result","transFileToBase64","alt","DirUploadInput","$input","useRef","useEffect","current","setAttribute","name","ref","onChange","event","handleOutput","files","ImageOnCanvas","canvasObj","createRef","this","imageObjs","forEach","draw","err","message","imageW","imageH","canvasSize","canvasW","canvasH","border","canvasRegion","imageData","w","h","getIndex","row","col","sx","sy","sWidth","sHeight","i","j","getImageValidRegion","getImageData","clearRect","Component","Popup","setState","isOpen","css","position","top","left","zIndex","visibility","content","style","MakerAction","ScrollToTopUsedInRouter","withRouter","history","unlisten","listen","window","scrollTo","MINI_DIR","PICS_DIR","hash","s","Md5","hashStr","genMetadata","sourceFileList","hashArr","Array","from","file","webkitRelativePath","pathSplit","split","realPath","slice","join","length","push","miniPath","genHashFromPicsHash","picsHash","getCategoryRawData","picsMetadata","res","isDefault","getItemTitle","replace","picInfo","categoryTitle","info","title","icon","defaultPic","items","itemTitle","defaultPosition","genConfig","configFromForm","fileArr","categoryRawData","getFullPath","relaPathArr","author","interface","headImg","footerImg","backgroundImg","footerText","previewHeight","previewWidth","cover","category","categoryInfoFromForm","raw","fromForm","allowBlank","hide","genInitUserData","categoryConfig","cData","defaultId","genSingleUserData","ROOT","m","find","d","itemId","findIndex","size","MakerActionContext","curCategoryName","action","SelectItem","setSelectItem","setDownload","setCurCategoryName","useMakerAction","initAction","Global","useContext","setAction","Download","ResultPreview","preview","itemData","paddingTop","Item","setCanvas","$image","imgObj","getAnPic","updateCanvas","complete","Items","MakerAct","onItemClick","pidId","itemSize","curCateData","itemsData","unshift","itemsUI","selectedItem","Category","categoryData","UI","ctitle","Consumer","value","Selector","userOutputData","setUserOutputData","outputImageDataURL","setOutputImageDataURL","u","imagep","then","toDataURL","toBlob","blob","onClickDownload","Maker","Provider","to","rootName","website","CreateAction","CreateActionContext","Editing","setEditing","setConfirmed","useCreateAction","Confirmed","PicsCategoryForm","useMemo","initFormData","setData","onInputValueChange","r","property","parseInt","JSON","parse","stringify","len","categoryForm","checked","_","Form","email","ui","categoryInfo","Test","state","testFileList","formOutput","testImageJSX","testImage","fileList","output","metadataJSON","testHash","genHashFromSourceFileList","getFileList","getFormOutput","undefined","Create","createAction","setFileList","setFormOutput","rootJSON","IndexContent","gameLinksUI","Auto","userInputStr","setUserInputStr","loading","setLoading","configCategory","cTitles","filter","v","cLen","md5str","mLen","sLen","floor","sMax","fill","newUserOutputData","num","iLen","iIndex","genRandomUserOuputData","$img","display","placeholder","TopRoute","global","body","clientWidth","setClientWidth","useGlobalContext","WithRouterUserPage","pageId","match","params","isAuto","auto","stylePath","setStylePath","rootData","all","catch","error","rel","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4984eb5e.chunk.js","sourcesContent":["import React, {useMemo, useState} from 'react'\nimport { Config, Metadata } from './data-format-def'\n\nconst GlobalContext = React.createContext({\n  config: {} as Config,\n  metadata: {} as Metadata,\n  root: '',\n  width: 200,\n\n  setRoot (data: string) {},\n  setConfig (data: Config) {},\n  setMetadata (data: Metadata) {},\n  updateClientWidth () {}\n})\n\nconst useGlobalContext = () => {\n  const [config, setConfig] = useState({} as Config)\n  const [metadata, setMetadata] = useState({} as Metadata)\n  const [root, setRoot] = useState('')\n  const [clientWidth, setClientWidth] = useState(document.body.clientWidth)\n\n  const width = useMemo(() => {\n    const width = clientWidth * 0.7 * 0.94\n    return width > 400 ? 400 * 0.94 : (width < 330 ? 330 * 0.94 : width)\n  } , [clientWidth])\n\n  return {\n    config,\n    metadata,\n    root,\n    width,\n    setRoot,\n    setMetadata,\n    setConfig,\n    updateClientWidth () {\n      setClientWidth(document.body.clientWidth)\n    }\n  }\n}\n\nconst ImageCache: { [picId: string]: HTMLImageElement } = {}\n\nexport { GlobalContext }\nexport { useGlobalContext }\nexport { ImageCache }\n\n","import { UserOutputData } from './data-format-def'\nimport { ImageCache } from './global'\n\nexport function getImageValidRegion (imageData: ImageData): [number, number, number, number] {\n    const data = imageData.data\n    const w = imageData.width, h = imageData.height\n    // from 1\n    const getIndex = function (row: number, col: number) {\n        return (row - 1) * w * 4 + (col - 1) * 4\n    }\n    let sx = -1, sy = -1, sWidth = -1, sHeight = -1\n    for (let i = 1; i <= h; i++) {\n        for (let j = 1; j < w; j++) {\n            if (data[getIndex(i, j) + 3] !== 0) {\n                sy = i - 1\n                break\n            }\n        }\n        if (sy !== -1) {\n            break\n        }\n    }\n    for (let i = 1; i <= w; i++) {\n        for (let j = 1; j <= h; j++) {\n            if (data[getIndex(j, i) + 3] !== 0) {\n                sx = i - 1\n                break\n            }\n        }\n        if (sx !== -1) {\n            break\n        }\n    }\n    for (let i = h; i >= 1; i--) {\n        for (let j = 1; j <= w; j++) {\n            if (data[getIndex(i, j) + 3] !== 0) {\n                sHeight = i - sy\n                break\n            }\n        }\n        if (sHeight !== -1) {\n            break\n        }\n    }\n    for (let i = w; i >= 1; i--) {\n        for (let j = 1; j <= h; j++) {\n            if (data[getIndex(j, i) + 3] !== 0) {\n                sWidth = i - sx\n                break\n            }\n        }\n        if (sWidth !== -1) {\n            break\n        }\n    }\n    return [sx, sy, sWidth, sHeight]\n}\n\nexport function loadFile (path: string): Promise<string> {\n    const request = new XMLHttpRequest()\n    request.open('get', path)\n    request.send(null)\n    console.log('call loadFile')\n    return new Promise((resolve, reject) => {\n        request.onload = function () {\n            if (request.readyState === 4) {\n                if (request.status === 200) {\n                    resolve(request.responseText)\n                } else {\n                    reject('Load file ' + path + ' failed.')\n                }\n            }\n        }\n    })\n}\n\n/**\n * 由于部分图片会先使用 img 标签加载，由于一些（未查证）的机制，浏览器会在后面再次请求该图时服用之前的相应。\n * 由于在后续的使用中要求图片对象携带跨域属性，所以在此处增加一条随机 query 以强制重新请求，确保此处返回的响应携带跨域属性\n */\nexport function loadImageWithoutCache (path: string): Promise<HTMLImageElement> {\n    const img = new Image()\n    img.crossOrigin = ''\n    img.src = path + '?t=' + Math.random()\n    return new Promise((resolve, reject) => {\n        img.onload = (e) => {\n            resolve(img)\n        }\n    })\n}\n\nexport function asyncTest (): Promise<string> {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve('async test')\n    }, 1000)\n  })\n}\n\nexport async function genOutputCanvas (userData: UserOutputData): Promise<HTMLCanvasElement> {\n    const images: any[] = Object.keys(userData).map(cTitle => {\n        return {\n            imageObj: null,\n            index: userData[cTitle].pic.index,\n            path: userData[cTitle].pic.path,\n            id: userData[cTitle].pic.picId\n        }\n    })\n    /*\n    for (const item of images) {\n        const imageObj = await loadImage(item.path)\n        item.imageObj = imageObj\n    }\n    */\n   // 暂时认为Global中缓存的预览图是正常尺寸的图\n   for (const item of images) {\n        if (ImageCache[item.id]) {\n            item.imageObj = ImageCache[item.id]\n        } else {\n            item.imageObj = await loadImageWithoutCache(item.path)\n       }\n   }\n    const canvas = document.createElement('canvas')\n    canvas.width = images[0].imageObj.width\n    canvas.height = images[0].imageObj.height\n    const ctx = canvas.getContext('2d')\n    ctx!.fillStyle = '#ffffff'\n    ctx?.fillRect(0, 0, canvas.width, canvas.height)\n    images.sort((a, b) => a.index - b.index)\n    for (const item of images) {\n        if (item.imageObj) {\n            ctx?.drawImage(item.imageObj, 0, 0)\n        }\n    }\n    return canvas\n}\n\nexport function isInEvilBrowser (): boolean {\n    const ua = navigator.userAgent.toLowerCase()\n    if (\n        /micromessenger/g.test(ua) ||\n        /weibo/g.test(ua) ||\n        /qq/g.test(ua)\n    ) {\n        return true\n    }\n    return false\n}\n\nexport function getAnPic (picId: string, path: string): HTMLImageElement {\n    if (ImageCache[picId]) {\n        return ImageCache[picId]\n    }\n    const imgObj = new Image()\n    imgObj.crossOrigin = ''\n    imgObj.src = path + '?t=' + Math.random()\n    ImageCache[picId] = imgObj\n    return imgObj\n}\n\nexport function imageObjToBase64 (img: HTMLImageElement): string {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = img.width;\n    canvas.height = img.height;\n    ctx!.drawImage(img, 0, 0);\n    return canvas.toDataURL('image/jpeg');\n}\n\nexport function loadCSS (url: string): HTMLLinkElement {\n    const head = document.getElementsByTagName('head')[0]\n    const link = document.createElement('link')\n    link.type = 'text/css'\n    link.rel = 'stylesheet'\n    link.href = url\n    head.appendChild(link)\n    return link\n}\n","import React, { RefObject, useEffect, useRef, useState } from 'react'\nimport { saveAs } from 'file-saver'\nimport { getImageValidRegion } from './utils'\nimport {withRouter} from 'react-router'\n\n/**\n * SaveTextLink\n * input: filename, file content\n */\ntype SaveTextLinkProps = {\n  filename: string\n  fileContent: string\n  className: string,\n  children: React.ReactNode\n}\n\nexport function SaveTextLink (props: SaveTextLinkProps) {\n  function createBlob (): Blob {\n    return new Blob([props.fileContent], { type: \"text/plain;charset=utf-8\" })\n  }\n  function save () {\n    saveAs(createBlob(), props.filename)\n  }\n  return (\n    <a\n      href=\"#\"\n      onClick={() => save()}\n      className={props.className}\n    >\n      {props.children}\n    </a>\n  )\n}\n\n/** ShowImage\n * input: image file blob : File\n * show: image\n */\ntype ShowLocalImageProps = {\n    imageFile: File | null\n}\nexport function ShowLocalImage (props: ShowLocalImageProps) {\n  const [imageBase64String, setImageBase64String] = useState('')\n\n  function transFileToBase64 (imageFile: File | null) {\n    if (!imageFile) {\n        return\n    }\n    const reads = new FileReader()\n    reads.readAsDataURL(imageFile)\n    reads.onload = (e) => {\n      if (e.target?.result === imageBase64String) {\n        return\n      }\n      setImageBase64String(e.target!.result as string)\n    }\n  }\n  transFileToBase64(props.imageFile)\n  console.log('showimage repeat exec test')\n  return (\n    <img\n      src={imageBase64String}\n      alt=\"\"\n    ></img>\n  )\n}\n\n/** DirUploadInput\n * upload a dir, return a FileList\n * output: file list : FileList\n */\ntype DirUploadInputProps = {\n  handleOutput: (fileList: FileList) => void\n}\n\nexport function DirUploadInput (props: DirUploadInputProps) {\n  const $input: React.MutableRefObject<HTMLInputElement | null> = useRef(null)\n\n  useEffect(() => {\n    if (!$input.current) {\n      return\n    }\n    $input.current.setAttribute('webkitdirectory', '')\n    $input.current.setAttribute('directory', '')\n    $input.current.setAttribute('multiple', '')\n  }, [$input])\n  function onGetFiles (event: React.ChangeEvent<HTMLInputElement>) {\n    props.handleOutput(event.target.files as FileList)\n  }\n  return (\n    <div>\n      <input\n        type=\"file\" name=\"file\"\n        ref={$input}\n        onChange={onGetFiles}\n      ></input>\n    </div>\n  )\n}\n\n/**\n * ImageOnCanvas\n * show a image on canvas\n */\ntype ImageOnCanvasProps = {\n  // change imageObj to pathArr or def a new component to pack this component\n  imageObjs: HTMLImageElement[],\n  canvasSize: [number, number],\n  border: number\n}\ntype ImageOnCanvasState = {\n}\nexport class ImageOnCanvas extends React.Component<ImageOnCanvasProps, ImageOnCanvasState> {\n  canvasObj: RefObject<HTMLCanvasElement>\n\n  constructor (props: ImageOnCanvasProps) {\n    super(props)\n    this.canvasObj = React.createRef()\n  }\n  componentDidMount () {\n    this.props.imageObjs.forEach(e => {\n      try {\n        this.draw(e)\n      } catch (err) {\n        console.log(err.message)\n      }\n    })\n  }\n  draw (imageObj: HTMLImageElement) {\n    const imageW = imageObj.width\n    const imageH = imageObj.height\n    const [canvasW, canvasH] = this.props.canvasSize\n    const border = this.props.border\n    this.canvasObj.current!.width = canvasW\n    this.canvasObj.current!.height = canvasH\n    const ctx = this.canvasObj.current!.getContext('2d')\n    ctx?.drawImage(imageObj, 0, 0, canvasW, canvasH)\n    const [sx, sy, sWidth, sHeight] = getImageValidRegion(ctx!.getImageData(0, 0, canvasW, canvasH))\n    ctx?.clearRect(0, 0, canvasW, canvasH)\n    let canvasRegion: [number, number, number, number]\n    if (sWidth > sHeight) {\n      canvasRegion = [\n        border, \n        (canvasH - (canvasW - 2 * border) / sWidth * sHeight) / 2,\n        canvasW - 2 * border,\n        (canvasW - 2 * border) / sWidth * sHeight\n      ]\n    } else {\n      canvasRegion = [\n        (canvasW - (canvasH - 2 * border) / sHeight * sWidth) / 2,\n        border, \n        (canvasH - 2 * border) / sHeight * sWidth,\n        canvasH - 2 * border\n      ]\n    }\n    ctx!.drawImage(\n      imageObj,\n      sx / canvasW * imageW,\n      sy / canvasH * imageH,\n      sWidth / canvasW * imageW,\n      sHeight / canvasH * imageH,\n      ...canvasRegion\n    )\n  }\n  render () {\n    return (\n      <canvas\n        ref={this.canvasObj}\n      >\n      </canvas>\n    )\n  }\n}\n\ntype PopupProps = {\n  content: string | null\n}\ntype PopupState = {\n}\nexport class Popup extends React.Component<PopupProps, PopupState> {\n  constructor (props: PopupProps) {\n    super(props)\n  }\n  onCloseBtnClick () {\n    this.setState({\n      isOpen: false\n    })\n  }\n  componentDidUpdate () {\n  }\n  render () {\n    const css: React.CSSProperties = {\n      position: 'absolute',\n      width: '100%',\n      top: 0,\n      left: 0,\n      zIndex: 200,\n      visibility: this.props.content === null ? 'hidden' : 'visible'\n    }\n    return (\n      <div style={{position: 'relative'}}>\n        <div\n          className=\"popup\"\n          style={css}\n        >\n          {\n            this.props.content\n            ? <img style={{width: '100%'}} src={this.props.content} alt=\"\" />\n            : <div></div>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction ScrollToTop ({ history }: any) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0)\n    })\n    return () => unlisten()\n  })\n  return (null)\n}\n\nexport const ScrollToTopUsedInRouter = withRouter(ScrollToTop)\n","import React, {useContext, useState} from \"react\"\nimport {Config} from \"../../data-format-def\"\nimport {GlobalContext} from \"../../global\"\n\nexport enum MakerAction {\n  SelectItem,\n  Download\n}\nexport const MakerActionContext = React.createContext({\n  curCategoryName: '',\n  action: MakerAction.SelectItem,\n  setSelectItem () {},\n  setDownload () {},\n  setCurCategoryName (data: string) {}\n})\n\nexport const useMakerAction = (initAction: MakerAction) => {\n  const Global = useContext(GlobalContext)\n  const [action, setAction] = useState(initAction)\n  const [curCategoryName, setCurCategoryName] = useState(\n    getDefaultSelectedCategoryName(Global.config)\n  )\n  return {\n    action,\n    curCategoryName,\n    setSelectItem () {\n      setAction(MakerAction.SelectItem)\n    },\n    setDownload () {\n      setAction(MakerAction.Download)\n    },\n    setCurCategoryName\n  }\n}\n\n\nfunction getDefaultSelectedCategoryName (config: Config): string{\n  return Object.keys(config.category)\n    .find(\n      title => config.category[title].info.index === 1\n    )!\n}\n","export type PathHash = string\nexport type FullPath = string // sourceName/*\nexport type PicPath = string // PIC_DIR/CategoryName/picName\nexport type PicMiniPath = string // PIC_DIR/CategoryName/MINI_DIR/picName\nexport type PicPosition = [number, number] // percentage\nexport type PicSize = [number, number] // percentage\nexport type ArrayIndex = number\n\nexport const MINI_DIR = 'mini'\nexport const PICS_DIR = 'pics'\nexport const CONFIG_FILENAME = 'config.json'\nexport const METADATA_FILENAME = 'metadata.json'\n\n/**\n * root.json\n */\nexport type Root = {\n    root: string\n}\n/**\n * metadata.json\n */\nexport type PicMetadata = {\n    id: PathHash\n    path: PicPath\n    miniPath?: PicMiniPath\n    filename: string\n}\nexport type PicMetadataSet = {\n    [id: string]: PicMetadata\n}\nexport type Metadata = {\n    hash: string,\n    data: PicMetadataSet\n}\n\n/**\n * config.json\n */\nexport type Config = {\n    root: string //discard\n    info: {\n        author: {\n            name: string\n            email: string\n            website: string\n        }\n        interface: {\n            headImg: FullPath\n            footerImg: FullPath\n            backgroundImg: FullPath\n            footerText: string\n            previewWidth: number\n            previewHeight: number\n        }\n        cover: FullPath\n        title: string\n    }\n    category: {\n        [categoryTitle: string]: {\n            info: {\n                title: string\n                icon: FullPath\n                defaultPic: PathHash\n                allowBlank: boolean\n                hide: boolean\n                index: number\n            }\n            items: {\n                title: string\n                pic: {\n                    picId: PathHash\n                    defaultPosition: PicPosition\n                }\n            }[]\n        }\n    }\n}\n\n/**\n * form data\n */\nexport type ConfigFromForm = {\n    info: {\n        author: {\n            name: string\n            email: string\n            website: string\n        }\n        interface: {\n            footerText: string\n        }\n        title: string\n    }\n    category: {\n        [categoryTitle: string]: {\n            title: string\n            allowBlank: boolean\n            hide: boolean\n            index: number\n        }\n    }\n}\n\nexport type CategoryInfoFromForm = ConfigFromForm['category']\n\n/**\n * category raw data, generate from pics metadata\n */\nexport type CategoryRawData = {\n    [categoryTitle: string]: {\n        info: {\n            title: string\n            icon: PicPath // from sourceName, but not implement\n            defaultPic: PathHash\n        }\n        items: {\n            [itemTitle: string]: Config['category']['']['items'][0]          }\n    }\n}\n\n/**\n * user output data\n */\nexport type UserOutputData = {\n    [categoryTitle: string]: {\n        itemId: ArrayIndex\n        itemTitle: string\n        pic: {\n            picId: PathHash\n            path: PicPath\n            miniPath: PicMiniPath\n            position: PicPosition\n            size: PicSize\n            index: number\n        }\n    }\n}\n","import { Metadata, MINI_DIR, PicMetadata, PicMetadataSet, PICS_DIR, PathHash, CategoryRawData, ConfigFromForm, Config, FullPath, UserOutputData } from './data-format-def'\nimport { Md5 } from 'ts-md5/dist/md5'\n\nfunction hash (s: string): string {\n    return Md5.hashStr(s) as string\n}\nfunction getPathHash (picRealPath: string): PathHash {\n    // realPath: PICS_DIR/className/itemName\n    return hash(picRealPath)\n}\nexport function genMetadata (sourceFileList: FileList): Metadata {\n    /**\n     * webkitRelativePath: sourcesName/PICS_DIR/className/itemName\n     *                     sourcesName/PICS_DIR/className/MINI_NAME/itemName\n     * path: PICS_DIR/className/itemName\n     * miniPath: PICS_DIR/className/mini/itemName\n     */\n    const fileArr = Array.from(sourceFileList)\n    const result: PicMetadataSet = {}\n    const hashArr: PathHash[] = []\n    for (const file of fileArr) {\n        // @ts-ignore\n        const path: string = file.webkitRelativePath\n        const filename: string = file.name\n        const pathSplit = path.split('/')\n        if (pathSplit[1] !== PICS_DIR) {\n            continue\n        }\n        // PICS_DIR/className/itemName\n        const realPath = pathSplit.slice(1, 3).join('/') + '/' + pathSplit[pathSplit.length - 1]\n        const id = getPathHash(realPath)\n        if (!result[id]) {\n            hashArr.push(id)\n            result[id] = {} as PicMetadata\n        }\n        if (pathSplit[3] === MINI_DIR) {\n            result[id].miniPath = pathSplit.slice(1).join('/')\n        } else {\n            result[id].path = realPath\n            result[id].id = id\n            result[id].filename = filename\n        }\n    }\n    return {\n        hash: genHashFromPicsHash(hashArr),\n        data: result\n    }\n}\n\nexport function genHashFromSourceFileList (sourceFileList: FileList): string {\n    /**\n     * webkitRelativePath: sourcesName/PICS_DIR/className/itemName\n     *                     sourcesName/PICS_DIR/className/MINI_NAME/itemName\n     */\n    const fileArr = Array.from(sourceFileList)\n    const hashArr = []\n    for (const file of fileArr) {\n        // @ts-ignore\n        const path: string = file.webkitRelativePath\n        const pathSplit = path.split('/')\n        if (pathSplit[1] !== PICS_DIR || pathSplit[3] === MINI_DIR) {\n            continue\n        }\n        // PICS_DIR/className/itemName\n        hashArr.push(hash(pathSplit.slice(1).join('/')))\n    }\n    return genHashFromPicsHash(hashArr)\n}\n\nfunction genHashFromPicsHash (picsHash: PathHash[]): string {\n    return hash(picsHash.sort((a, b) => a > b ? 1 : -1).join(''))\n}\n\nexport function getCategoryRawData (picsMetadata: PicMetadataSet): CategoryRawData {\n    const res: CategoryRawData = {}\n    const getCategoryTitle = function (path: string): string {\n        return path.split('/')[1]\n    }\n    const isIcon = function (filename: string): boolean {\n        return /icon\\.png/g.test(filename)\n    }\n    const isDefault = function (filename: string): boolean {\n        return /default\\..*\\.png/g.test(filename)\n    }\n    const getItemTitle = function (filename: string): string {\n        return filename.replace('default.', '').replace('.png', '')\n    }\n    for (const picId in picsMetadata) {\n        const picInfo = picsMetadata[picId]\n        const categoryTitle = getCategoryTitle(picInfo.path)\n        if (!res[categoryTitle]) {\n            res[categoryTitle] = {\n                info: {\n                    title: categoryTitle,\n                    icon: '',\n                    defaultPic: ''\n                },\n                items: {}\n            }\n        }\n        if (isIcon(picInfo.filename)) {\n            res[categoryTitle].info.icon = picInfo.path\n            continue\n        }\n        if (isDefault(picInfo.filename)) {\n            res[categoryTitle].info.defaultPic = picId\n        }\n        const itemTitle = getItemTitle(picInfo.filename)\n        res[categoryTitle].items[itemTitle] = {\n            title: itemTitle,\n            pic: {\n                picId: picId,\n                defaultPosition: [0, 0]\n            }\n        }\n    }\n    return res\n}\n\nexport function getRootName (sourceFileList: FileList): string {\n    if (!sourceFileList || sourceFileList.length === 0) {\n        return ''\n    }\n    // @ts-ignore\n    return sourceFileList[0].webkitRelativePath.split('/')[0]\n}\n\nexport function genConfig (configFromForm: ConfigFromForm, sourceFileList: FileList): Config {\n    // thought fileList is not empty\n    const fileArr = Array.from(sourceFileList)\n    const picsMetadata: PicMetadataSet = genMetadata(sourceFileList).data\n    const categoryRawData: CategoryRawData = getCategoryRawData(picsMetadata)\n    const getFullPath = function (name: string): FullPath {\n        for (const file of fileArr) {\n            // @ts-ignore\n            const relaPathArr = file.webkitRelativePath.split('/')\n            if (relaPathArr[1].split('.')[0] === name) {\n                return relaPathArr.join('/')\n            }\n        }\n        return ''\n    }\n    return {\n        // @ts-ignore\n        root: '/sources/' + fileArr[0].webkitRelativePath.split('/')[0] + '/',\n        info: {\n            author: configFromForm.info.author,\n            interface: {\n                headImg: getFullPath('headImg'),\n                footerImg: getFullPath('footerImg'),\n                backgroundImg: getFullPath('backgroundImg'),\n                footerText: configFromForm.info.interface.footerText,\n                previewHeight: 100,\n                previewWidth: 100\n            },\n            cover: getFullPath('cover'),\n            title: configFromForm.info.title\n        },\n        category: (function (categoryInfoFromForm, categoryRawData){\n            const res: Config['category'] = {}\n            Object.keys(categoryRawData).forEach((title) => {\n                const raw = categoryRawData[title]\n                const fromForm = categoryInfoFromForm[title]\n                res[title] = {\n                    info: {\n                        title: title,\n                        icon: raw.info.icon,\n                        defaultPic: raw.info.defaultPic,\n                        allowBlank: fromForm.allowBlank,\n                        hide: fromForm.hide,\n                        index: fromForm.index\n                    },\n                    items: Object.keys(raw.items).map(itemTitle => {\n                        return raw.items[itemTitle]\n                    })\n                }\n            })\n            return res\n        })(configFromForm.category, categoryRawData)\n    }\n}\n\nexport function genInitUserData (root: string, categoryConfig: Config['category'], picsMetadata: Metadata['data']): UserOutputData {\n    const res: UserOutputData = {}\n    Object.keys(categoryConfig)\n        .forEach(categoryTitle => {\n            const cData = categoryConfig[categoryTitle]\n            if (!cData.info.defaultPic) {\n                return\n            }\n            const defaultId = cData.info.defaultPic\n            res[categoryTitle] = genSingleUserData(root, categoryConfig, picsMetadata, categoryTitle, defaultId)\n        })\n    return res\n}\nexport function genSingleUserData (\n    root: string,\n    categoryConfig: Config['category'],\n    picsMetadata: Metadata['data'],\n    categoryTitle: string,\n    picId: PathHash): UserOutputData[any] {\n        const ROOT = root // Global.root\n        const cData = categoryConfig[categoryTitle]\n        const m = picsMetadata // Global.metadata!.data\n        const picInfo = cData.items.find(e => e.pic.picId === picId)\n        const d = m[picId]\n        return {\n            itemId: cData.items.findIndex(e => e.pic.picId === picId),\n            itemTitle: picInfo!.title,\n            pic: {\n                    picId: picId,\n                    path: ROOT + d.path,\n                    miniPath: ROOT + (d.miniPath || d.path),\n                    position: picInfo!.pic.defaultPosition,\n                    size: [100, 100],\n                    index: cData.info.index\n            }\n        }\n    }\n","import {useContext, useEffect, useRef, useState} from 'react';\nimport { ImageOnCanvas, Popup } from '../../common';\nimport { PathHash, UserOutputData } from '../../data-format-def';\nimport { genInitUserData, genSingleUserData } from '../../data-trans';\nimport {GlobalContext} from '../../global'\nimport './index.css'\nimport { genOutputCanvas, getAnPic, isInEvilBrowser } from '../../utils';\nimport {MakerAction, MakerActionContext} from './action';\n\ntype ResultPreviewProps = {\n  userData: UserOutputData\n  width: string\n}\nfunction ResultPreview (props: ResultPreviewProps) {\n  const preview = Object.keys(props.userData)\n    .map(title => {\n      const itemData = props.userData[title]\n      const picInfo = itemData.pic\n      return (\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            zIndex: itemData.pic.index}}\n          key={itemData.pic.picId}\n        >\n          <img\n            width=\"100%\"\n            height=\"100%\"\n            src={(picInfo.miniPath || picInfo.path)}\n            alt={itemData.itemTitle}\n          />\n        </div>\n      )\n    })\n  return (\n    <div\n      className=\"preview\"\n      style={{position: 'relative',  width: props.width, paddingTop: '100%' }}\n    >\n      {preview}\n    </div>\n  )\n}\n\ntype ItemProps = {\n  path: string\n  size: number\n  picId: string\n}\nfunction Item (props: ItemProps) {\n  const [canvas, setCanvas] = useState(<div></div>)\n  const $image = useRef(getAnPic(props.picId, props.path))\n\n  useEffect(() => {\n    if ($image.current.complete) {\n      updateCanvas()\n    } else {\n      $image.current.onload = () => {\n        updateCanvas()\n      }\n    }\n  }, [$image])\n\n  function updateCanvas () {\n    setCanvas(\n      <ImageOnCanvas\n        imageObjs={[$image.current]}\n        canvasSize={[props.size, props.size]}\n        border={5}\n      />\n    )\n  }\n  return (\n    <div style={{width: props.size + 'px', height: props.size + 'px'}}>\n      {canvas}\n    </div>\n  )\n}\n\ntype ItemsPorps = {\n  handleOutput: (selectedItemTitle: string, picId: PathHash) => void\n  selectedItem: string // unique title or ''\n  itemSize: number\n}\nfunction Items (props: ItemsPorps) {\n  const Global = useContext(GlobalContext)\n  const MakerAct = useContext(MakerActionContext)\n\n  function onItemClick (itemTitle: string, pidId: PathHash) {\n    MakerAct.setSelectItem()\n    props.handleOutput(itemTitle, pidId)\n  }\n  const itemSize = props.itemSize\n  const ROOT = Global.root\n  const curCateData = Global.config!.category[MakerAct.curCategoryName]\n  const picsMetadata = Global.metadata.data\n  const itemsData = curCateData.items.slice()\n  if (curCateData.info.allowBlank) {\n    itemsData.unshift({\n      title: '',\n      pic: {\n        picId: '',\n        defaultPosition: [0, 0]\n      }\n    })\n  }\n  const itemsUI = itemsData.map((item) => {\n    // /sources/FullPath\n    if (!item.pic.picId) {\n      return (\n        <div\n          onClick={() => onItemClick(item.title, item.pic.picId)}\n          className={\n            (props.selectedItem === item.title ? 'selected-item' : '')\n            + ' item'\n          }\n          key={''}\n          style={{width: itemSize + 'px', height: itemSize + 'px'}}\n        >\n        </div>\n      )\n    }\n    const m = picsMetadata[item.pic.picId]\n    const path = ROOT + (m.miniPath || m.path)\n    return (\n      <div\n        onClick={() => onItemClick(item.title, item.pic.picId)}\n        className={\n          (props.selectedItem === item.title ? 'selected-item' : '')\n          + ' item'\n        }\n        key={path}\n      >\n        <Item\n          size={itemSize}\n          path={path}\n          picId={item.pic.picId}\n        />\n      </div>\n    )\n  })\n  return (\n    <div className=\"items\">\n      {itemsUI}\n    </div>\n  )\n}\n\nfunction Category () {\n  const Global = useContext(GlobalContext)\n  const MakerAct = useContext(MakerActionContext)\n\n  const width = Global.width\n  const categoryData = Global.config.category\n\n  const UI = Object.keys(categoryData)\n    .sort((a, b) =>\n      categoryData[a].info.index - categoryData[b].info.index)\n    .map((ctitle) => {\n      const info = categoryData[ctitle].info\n      if (info.hide) {\n        return (\n          <div key={ctitle}></div>\n        )\n      }\n      return (\n        <MakerActionContext.Consumer key={ctitle}>\n        {\n          value =>\n            <div\n              className={\n                (value.curCategoryName === ctitle ? 'selected-category': '')\n                + ' category-item'\n              }\n              style={{width: width / 4 + 'px', height: width / 4 / 1.8 + 'px'}}\n            >\n              {\n                info.icon &&\n                <img src={info.icon} alt=\"\"/>\n              }\n              <button onClick={() => MakerAct.setCurCategoryName(ctitle)}>{ctitle}</button>\n            </div>\n        }\n        </MakerActionContext.Consumer>\n      )\n    })\n  return <div className=\"category\">{UI}</div>\n}\n\nexport default function Selector () {\n  const Global = useContext(GlobalContext)\n  const MakerAct = useContext(MakerActionContext)\n\n  const [userOutputData, setUserOutputData] = useState(\n    genInitUserData(\n      Global.root,\n      Global.config.category,\n      Global.metadata.data\n    ) as UserOutputData\n  )\n  const [outputImageDataURL, setOutputImageDataURL] = useState('')\n\n  useEffect(() => {\n    if (MakerAct.action === MakerAction.SelectItem) {\n      setOutputImageDataURL('')\n    }\n  }, [MakerAct.action])\n\n  function handleInputFromItems (itemTitle: string, picId: PathHash) {\n    if (itemTitle === '') {\n      delete userOutputData[MakerAct.curCategoryName]\n      setUserOutputData({ ...userOutputData })\n      return\n    }\n    if (\n      userOutputData[MakerAct.curCategoryName]\n      && userOutputData[MakerAct.curCategoryName].itemTitle === itemTitle\n    ) {\n      return\n    }\n    setUserOutputData({\n      ...userOutputData,\n      [MakerAct.curCategoryName]: genSingleUserData(\n        Global.root!,\n        Global.config!.category,\n        Global.metadata!.data,\n        MakerAct.curCategoryName,\n        picId\n      )\n    })\n  }\n  function onClickDownload () {\n    MakerAct.setDownload()\n    const imagep = genOutputCanvas(userOutputData)\n    if (isInEvilBrowser()) {\n      imagep.then((canvas) => {\n        setOutputImageDataURL(canvas.toDataURL())\n      })\n    } else {\n      imagep.then((canvas) => {\n        canvas.toBlob(function (blob) {\n          saveAs(blob!, 'output.png')\n        })\n      })\n    }\n  }\n\n  const width = Global.width\n  const u = userOutputData[MakerAct.curCategoryName]\n\n  return (\n    <div>\n      <MakerActionContext.Consumer>\n        {\n          value =>\n            value.action === MakerAction.Download\n            && <Popup content={outputImageDataURL} />\n        }\n      </MakerActionContext.Consumer>\n      <ResultPreview\n        width={'100%'}\n        userData={userOutputData}\n      />\n      <Category />\n      <Items\n        handleOutput={handleInputFromItems}\n        selectedItem={u ? u.itemTitle : ''}\n        itemSize={width / 3}\n      />\n      <button className=\"download-btn\" onClick={() => onClickDownload()}>下载</button>\n    </div>\n  )\n}\n","import {useContext} from 'react';\nimport './index.css'\nimport Selector from './selector'\nimport { isInEvilBrowser } from '../../utils';\nimport {GlobalContext} from '../../global';\nimport {MakerAction, MakerActionContext, useMakerAction} from './action';\nimport {Link} from 'react-router-dom';\n\ntype MakerProps = {\n  rootName: string\n}\nexport default function Maker (props: MakerProps) {\n  const Global = useContext(GlobalContext)\n  return (\n    <div className=\"main\">\n      <div className=\"container\">\n        <header className=\"header\"></header>\n        <div className=\"body\">\n          <MakerActionContext.Provider value={useMakerAction(MakerAction.SelectItem)}>\n            <Selector />\n          </MakerActionContext.Provider>\n          {\n            isInEvilBrowser()\n            ? <p className=\"warning\">温馨提示：你当前在APP内置浏览器中，若想保存图片请点击下载按钮后长按上方预览区保存</p>\n            : <p className=\"warning\">{Global.config.info.interface.footerText}</p>\n          }\n        </div>\n        <div className=\"page-footer\">\n          <Link className=\"link\" to={props.rootName + '/auto'}>去使用id自动生成</Link>\n          <Link className=\"link\" to='create'>我也要制作一个捏脸游戏</Link>\n          <a target=\"_blank\" className=\"link\" href={'//' + Global.config.info.author.website}>\n            作者：{Global.config.info.author.name || '匿名'}\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from \"react\"\n\nexport enum CreateAction {\n  Editing,\n  Confirmed\n}\nexport const CreateActionContext = React.createContext({\n  action: CreateAction.Editing,\n  setEditing () {},\n  setConfirmed () {}\n})\n\nexport const useCreateAction = (initAction: CreateAction) => {\n  const [action, setAction] = useState(initAction)\n  return {\n    action,\n    setEditing () {\n      setAction(CreateAction.Editing)\n    },\n    setConfirmed () {\n      setAction(CreateAction.Confirmed)\n    }\n  }\n}\n\n\n","import React, {useContext, useEffect, useMemo, useRef, useState} from 'react';\nimport { CategoryInfoFromForm, CategoryRawData, ConfigFromForm, PicMetadataSet } from '../../data-format-def';\nimport './form.css'\nimport { getCategoryRawData } from '../../data-trans';\nimport {CreateActionContext} from './action';\n\ntype FormProps = {\n  handleOutput: (output: ConfigFromForm) => void\n  picsMetadata: PicMetadataSet | undefined,\n}\nfunction Form (props: FormProps) {\n  const CreateAction = useContext(CreateActionContext)\n  const author = useRef({\n    name: '', email: '', website: ''\n  })\n  const ui = useRef({\n    footerText: ''\n  })\n  const title = useRef('')\n  const categoryInfoFromForm = useRef({} as CategoryInfoFromForm)\n\n  function handleInput (categoryInfo: CategoryInfoFromForm) {\n    categoryInfoFromForm.current = categoryInfo\n    CreateAction.setEditing()\n  }\n  function onInputValueChange (e: React.ChangeEvent<HTMLInputElement>, property: string) {\n    switch (property) {\n      case 'name':\n      case 'email':\n      case 'website':\n      author.current = {\n        ...author.current,\n        [property]: e.target.value\n      }\n        break\n      case 'footerText':\n      ui.current = {\n        ...ui.current,\n        [property]: e.target.value\n      }\n        break\n      case 'title':\n      title.current = e.target.value\n    }\n    CreateAction.setEditing()\n  }\n  function onConfirm () {\n    if (!props.picsMetadata) {\n      return\n    }\n    props.handleOutput({\n      info: {\n        author: { ...author.current },\n        interface: { ...ui.current },\n        title: title.current\n      },\n      category: categoryInfoFromForm.current\n    })\n    CreateAction.setConfirmed()\n  }\n  return (\n    <form>\n      <h2>填写作者信息（也可以不填）</h2>\n      名字：\n      <input\n        type=\"text\"\n        onChange={(e) => onInputValueChange(e, 'name')}\n      /><br/>\n      邮箱：\n      <input\n        type=\"text\"\n        onChange={(e) => onInputValueChange(e, 'email')}\n      /><br/>\n      网址：\n      <input\n        type=\"text\"\n        onChange={(e) => onInputValueChange(e, 'website')}\n      /><br/>\n      <h2>填写页面信息（也可以不填，但最好填）</h2>\n      页面标题：\n      <input\n        type=\"text\"\n        onChange={(e) => onInputValueChange(e, 'title')}\n      /><br/>\n      页脚文字：\n      <input\n        type=\"text\"\n        onChange={(e) => onInputValueChange(e, 'footerText')}\n      /><br/>\n      <h2>填写分类信息</h2>\n      {\n        props.picsMetadata &&\n        <PicsCategoryForm\n          handleOutput={handleInput}\n          picsMetadata={props.picsMetadata}\n        />\n      }\n      <input\n        className=\"form-button\"\n        type=\"button\"\n        value=\"确定\"\n        onClick={() => onConfirm()}\n      />\n    </form>\n  )\n}\n\ntype PicsCategoryFormProps = {\n  handleOutput: (categoryInfoFromForm: CategoryInfoFromForm) => void\n  picsMetadata: PicMetadataSet\n}\n\nfunction PicsCategoryForm (props: PicsCategoryFormProps) {\n  const categoryRawData = useMemo(\n    () => getCategoryRawData(props.picsMetadata),\n    [props.picsMetadata]\n  )\n  const [data, setData] = useState(initFormData(categoryRawData))\n\n  useEffect(() => {\n    setData(initFormData(categoryRawData))\n    props.handleOutput(JSON.parse(JSON.stringify(data)))\n  }, [props.picsMetadata])\n\n  function initFormData (categoryRawData: CategoryRawData): CategoryInfoFromForm {\n    const res: CategoryInfoFromForm = {}\n    let i = 1\n    for (const title in categoryRawData) {\n      res[title] = {\n        title: title,\n        allowBlank: false,\n        hide: false,\n        index: i++\n      }\n    }\n    return res\n  }\n  function onInputValueChange (r: string, title: string, property: string) {\n    switch(property) {\n      case 'allowBlank':\n      data[title].allowBlank = !data[title].allowBlank\n        break\n      case 'hide':\n      data[title].hide = !data[title].hide\n        break\n      case 'index':\n      data[title].index = parseInt(r)\n        break\n    }\n    setData({...data})\n    props.handleOutput(JSON.parse(JSON.stringify(data)))\n  }\n\n  const len = Object.keys(categoryRawData).length\n  const categoryForm = \n    Object.keys(categoryRawData)\n    .map((title) => {\n      return (\n        <tr key={title}>\n          <td>\n            <span>{categoryRawData[title].info.title}</span>\n          </td>\n          <td>\n            <input\n              onChange={(e) => onInputValueChange(e.target.value, title, 'allowBlank')}\n              checked={data[title].allowBlank}\n              name={title + '-allowBlank'}\n              type=\"checkbox\"\n            />\n          </td>\n          <td>\n            <input\n              onChange={(e) => onInputValueChange(e.target.value, title, 'hide')}\n              checked={data[title].hide}\n              name={title + '-hide'}\n              type=\"checkbox\"\n            />\n          </td>\n          <td>\n            <select\n              onChange={(e) => onInputValueChange(e.target.value, title, 'index')}\n              name={title + '-index'}\n              value={data[title].index}\n            >\n              {\n                Array.from(Array(len))\n                  .map((_, i) =>\n                    <option\n                      key={i + 1}\n                      value={i + 1}\n                    > {i + 1}\n                    </option>\n                )\n              }\n            </select>\n          </td>\n        </tr>\n      )\n    })\n  return (\n    <div className=\"form-category-data\">\n      <table>\n        <thead>\n          <tr>\n            <td>类别</td>\n            <td>允许该类别有空白项</td>\n            <td>该类别不允许选择</td>\n            <td>层序（数字大的在上面）</td>\n          </tr>\n        </thead>\n        <tbody>\n          {categoryForm}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Form\n","import React from 'react';\nimport './index.css';\nimport { DirUploadInput, ShowLocalImage, SaveTextLink, ImageOnCanvas } from '../../common'\nimport { ConfigFromForm } from '../../data-format-def';\nimport Form from '../Create/form';\nimport { genConfig, genHashFromSourceFileList, genMetadata } from '../../data-trans'\n\nclass Test extends React.Component<any, any>{\n  constructor (props: any) {\n    super(props)\n    document.title = '拉聂耳地区'\n    this.state = {\n      testFileList: null,\n      formOutput: null,\n      testImageJSX: (\n        <div></div>\n      )\n    }\n    const testImage = new Image()\n    testImage.src = '/sources/linmo/pics/衣服/蓝色卫衣.png'\n    testImage.onload = (e) => {\n      if (!e.target) {\n        return\n      }\n      this.setState({\n        testImageJSX: (\n          <div style={{'backgroundColor': '#fff'}}>\n            <ImageOnCanvas\n              imageObjs={[testImage]}\n              canvasSize={[90, 90]}\n              border={5}\n            ></ImageOnCanvas>\n          </div>\n        )\n      })\n    }\n  }\n  getFileList (fileList: FileList) {\n    this.setState({\n      testFileList: fileList\n    })\n  }\n  getFormOutput (output: ConfigFromForm) {\n    this.setState({\n      formOutput: output\n    })\n  }\n  genConfig () {\n    if (!this.state.testFileList || !this.state.formOutput) {\n      return ''\n    }\n    console.log(this.state.testFileList, this.state.formOutput)\n    const config = genConfig(this.state.formOutput, this.state.testFileList)\n    console.log(JSON.stringify(config))\n    return JSON.stringify(config)\n  }\n  render () {\n    const files = this.state.testFileList\n    let metadataJSON = '{}'\n    let testHash = ''\n    let metadata\n    if (files) {\n      metadata = genMetadata(files as FileList)\n      metadataJSON = JSON.stringify(metadata)\n      testHash = genHashFromSourceFileList(files)\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            FBI WARNING\n          </p>\n          <p>\n            欢迎你来到神秘页面\n          </p>\n          {this.state.testImageJSX}\n          <DirUploadInput\n            handleOutput={(fileList) => this.getFileList(fileList)}\n          />\n          <Form\n            handleOutput={(output) => this.getFormOutput(output)}\n            picsMetadata={metadata ? metadata.data : undefined}\n          />\n          {testHash}\n          <SaveTextLink\n            fileContent={metadataJSON}\n            filename=\"download_metadata_test.json\"\n            className=\"\"\n          >\n           metadata.json下载测试 \n          </SaveTextLink>\n          <SaveTextLink\n            fileContent={this.genConfig()}\n            filename=\"download_config_test.json\"\n            className=\"\"\n          >\n            config.json下载测试\n          </SaveTextLink>\n          <ShowLocalImage\n            imageFile={files ? files[2] : null}\n          />\n        </header>\n      </div>\n    );\n    }\n}\n\nexport default Test;\n","import {useContext, useEffect, useMemo, useState} from 'react';\nimport './index.css';\nimport { DirUploadInput, SaveTextLink } from '../../common'\nimport { ConfigFromForm } from '../../data-format-def';\nimport Form from './form';\nimport { genConfig, genMetadata, getRootName } from '../../data-trans'\nimport {CreateAction, CreateActionContext, useCreateAction} from './action';\nimport {Link} from 'react-router-dom';\n\nfunction Create () {\n  const createAction = useContext(CreateActionContext)\n\n  const [fileList, setFileList] = useState({} as FileList)\n  const [formOutput, setFormOutput] = useState({} as ConfigFromForm)\n\n  const metadata = useMemo(\n    () => fileList.length ? genMetadata(fileList) : null,\n    [fileList]\n  )\n\n  const config = useMemo(\n    () => (!fileList.length || !formOutput.info)\n      ? ''\n      : JSON.stringify(genConfig(formOutput, fileList))\n  , [fileList, formOutput])\n\n  const rootJSON = useMemo(\n    () => fileList.length\n      ? `{ \"root\": \"/sources/${getRootName(fileList)}/\" }`\n      : '',\n    [fileList]\n  )\n\n  useEffect(() => {\n    document.title = '创建属于你的捏脸游戏！'\n  })\n\n  return (\n  <CreateActionContext.Provider value={useCreateAction(CreateAction.Editing)}>\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h2>!醒目! 请使用电脑进行操作</h2>\n        <p>在本页面中，我们将一步一步创建一个自己的捏脸游戏</p>\n        <p>创建过程分为三个部分：</p>\n        <p>1.准备好你的捏脸素材</p>\n        <p>2.制作资源包</p>\n        <p>3.上传资源包</p>\n        <h2>首先</h2>\n        <p>绘制你的捏脸素材，所有的素材必须是正方形且大小一致，格式为png</p>\n        <p>具体可以参考<a href=\"https://github.com/mengrru/lm/tree/main/public/sources/example/pics\" target=\"_blank\">这里</a></p>\n        <h2>然后我们需要制作一个资源包</h2>\n        <p>（你可以<a href=\"https://github.com/mengrru/lm/tree/main/public/sources/example\" target=\"_blank\">点击这里</a>查看示例资源包）</p>\n        <p>新建一个文件夹，取个英文名，比如 example</p>\n        <p>进入这个文件夹，再新建一个文件夹，取名为 pics</p>\n        <p>进入 pics 文件夹，按照你的想法新建若干个文件夹，每个文件夹代表你的素材的分类</p>\n        <p>比如 表情 衣服 背景 等等</p>\n        <p>在相应的文件夹中放入相应的素材</p>\n        <p>对于默认选中的素材，文件名以 default. 开头，比如： default.笑脸.png </p>\n        <h2>在这里传入刚才第一次建好的文件夹（比如 example）</h2>\n        <DirUploadInput\n          handleOutput={(fileList) => {\n            createAction.setEditing()\n            setFileList(fileList)\n          }}\n        />\n        <Form\n          handleOutput={(output) => setFormOutput(output)}\n          picsMetadata={metadata ? metadata.data : undefined}\n        />\n        <h2>填完点击确定后会出现三个下载按钮：</h2>\n        <CreateActionContext.Consumer>\n          { value =>\n            value.action === CreateAction.Confirmed\n            ? (\n              <div>\n                <SaveTextLink\n                  fileContent={metadata ? JSON.stringify(metadata) : '{}'}\n                  filename=\"metadata.json\"\n                  className=\"download-config-link\"\n                >\n                  下载metadata.json \n                </SaveTextLink>\n                <SaveTextLink\n                  fileContent={config}\n                  filename=\"config.json\"\n                  className=\"download-config-link\"\n                >\n                  下载config.json\n                </SaveTextLink>\n                <SaveTextLink\n                  fileContent={rootJSON}\n                  filename=\"root.json\"\n                  className=\"download-config-link\"\n                >\n                  下载root.json\n                </SaveTextLink>\n              </div>\n            )\n            : (<div></div>)\n          }\n        </CreateActionContext.Consumer>\n        <h2>上面三个文件下载后</h2>\n        <p>进入刚才创建的 example 文件夹，将这三个文件放到文件夹中</p>\n        <p>这样你的资源包就完成啦！撒花✨</p>\n        <h2>接下来进入最后一步</h2>\n        <p>上传你的资源包到可以被访问到的地方，有两种选择：</p>\n        <p>1. 通过提pr的方式上传到<a href=\"https://github.com/mengrru/lm-instance\">此仓库</a>的 main 分支的 sources 目录下</p>\n        <p>2. 自行购买静态存储服务（如阿里云OSS）上传，并将 root.json 中的 root 字段改为你的资源所在的绝对地址，然后通过提pr的方式上传 root.json 到<a href=\"https://github.com/mengrru/lm-instance\">此仓库</a>的 main 分支的 sources 目录下</p>\n        <p>如果搞不懂怎样上传，可以直接发邮件到 mengrru@outlook.com 让我来帮你上传</p>\n        <p>-</p>\n        <p><Link to=\"/\">返回首页</Link></p>\n        <p>-</p>\n      </header>\n    </div>\n  </CreateActionContext.Provider>\n  )\n}\n\nexport default Create;\n\n","import './index.css'\nimport {Link} from \"react-router-dom\"\n\nexport default function IndexContent () {\n  document.title = '欢迎光临'\n  const alternative = [\n    ['Example', 'example'],\n    ['捏一个林墨', 'linmo']\n  ]\n  const gameLinksUI = alternative.map(\n    e =>\n      <Link key={e[1]} className=\"index-btn\" to={`/${e[1]}`}>{e[0]}</Link>\n  )\n  return (\n    <div className=\"index-container\">\n      <div>\n        目前本实例可以游玩的捏脸游戏：<br/>\n        {gameLinksUI}\n      </div>\n      <Link className=\"index-link\" to=\"/create\">我也要创建一个捏脸游戏</Link>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useMemo, useRef, useContext } from 'react';\nimport { Config, Metadata, UserOutputData } from '../../data-format-def';\nimport { genInitUserData, genSingleUserData } from '../../data-trans';\nimport { GlobalContext } from '../../global'\nimport { genOutputCanvas } from '../../utils';\nimport './index.css'\nimport { Md5 } from 'ts-md5/dist/md5'\n\ntype AutoProps = {\n  rootName: string\n}\n\nexport default function Auto (props: AutoProps) {\n  const Global = useContext(GlobalContext)\n  const [userInputStr, setUserInputStr] = useState('')\n  const [loading, setLoading] = useState(true)\n  const userOutputData = useMemo(\n    () => userInputStr\n      ? genRandomUserOuputData(\n        Global.root,\n        Global.metadata,\n        Global.config.category,\n        userInputStr\n      )\n      : genInitUserData(\n        Global.root,\n        Global.config.category,\n        Global.metadata.data\n      ),\n      [userInputStr])\n  const $img: React.MutableRefObject<HTMLImageElement | null> = useRef(null)\n  const $input: React.MutableRefObject<HTMLInputElement | null> = useRef(null)\n\n  useEffect(() => {\n    const imagep = genOutputCanvas(userOutputData)\n    imagep.then(canvas => {\n      if ($img.current) {\n        $img.current.src = canvas.toDataURL()\n        setLoading(false)\n      }\n    })\n  }, [userInputStr])\n\n  const onConfirm = () => {\n    setLoading(true)\n    setUserInputStr(\n      $input.current\n      ? $input.current.value\n      : '')\n  }\n  return (\n    <div className=\"auto-container\">\n      <h2 className=\"auto-title\">{Global.config.info.title}</h2>\n      <div className=\"auto-image-container\">\n        <span style={loading ? { display: 'inline'} : { display: 'none' }}>努力加载中...</span>\n        <img style={loading ? { display: 'none'}: { display: 'inline' }} ref={$img} alt={Global.config.info.title}/>\n      </div>\n      <div className=\"auto-input-container\">\n        <input ref={$input} className=\"auto-input\" type=\"text\" placeholder=\"输入你的名字、id或其它\" />\n        <br/>\n        <button className=\"auto-button\" onClick={() => onConfirm()}>点击获得图片</button>\n      </div>\n      <div className=\"auto-link-container\">\n        <a href={'/' + props.rootName}>去捏脸</a>\n      </div>\n    </div>\n  )\n}\n\nfunction genRandomUserOuputData (\n  root: string,\n  metadata: Metadata,\n  configCategory: Config['category'],\n  userInputStr: string\n): UserOutputData {\n  const cTitles = Object.keys(configCategory).filter(v => !configCategory[v].info.hide).sort((a, b) => a < b ? 1 : -1)\n  const cLen = cTitles.length\n  const md5str: string = Md5.hashStr(userInputStr) as string\n  const mLen = md5str.length\n  let sLen = Math.floor(mLen / cLen)\n  let sMax = parseInt(Array(sLen).fill('F').join(''), 16)\n  const newUserOutputData: UserOutputData = genInitUserData(root, configCategory, metadata.data)\n  for (let i = 0; i < cLen; i++) {\n    let num = parseInt(md5str.slice(i * sLen, i * sLen + sLen), 16)\n    if (num === sMax) {\n      num--\n    }\n    const cTitle = cTitles[i]\n    const items = configCategory[cTitle].items.slice().sort((a, b) => a.title < b.title ? 1 : -1)\n    const iLen = items.length\n    const iIndex = Math.floor(num / (sMax / iLen))\n    newUserOutputData[cTitle] = genSingleUserData(root, configCategory, metadata.data, cTitle, items[iIndex].pic.picId)\n  }\n  return newUserOutputData\n}\n","import React, {useContext, useEffect, useMemo, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\"\nimport { loadFile } from './utils';\nimport { GlobalContext, useGlobalContext } from './global'\nimport { Root } from './data-format-def';\nimport Maker from './pages/Maker';\nimport Test from './pages/Test';\nimport Create from './pages/Create'\nimport Index from './pages/Index'\nimport Auto from './pages/Auto'\nimport {ScrollToTopUsedInRouter} from './common';\n\n\nfunction TopRoute () {\n  const global = useGlobalContext()\n\n  return (\n    <GlobalContext.Provider value={global}>\n      <Router>\n        <ScrollToTopUsedInRouter />\n        <Switch>\n          <Route path=\"/create\" children={<Create />} />\n          <Route path=\"/test\" children={<Test />} />\n          <Route path=\"/:id/:auto\" children={<WithRouterUserPage />} />\n          <Route path=\"/:id\" children={<WithRouterUserPage />} />\n          <Route path=\"/\">\n              <Index />\n          </Route>\n        </Switch>\n      </Router>\n    </GlobalContext.Provider>\n  )\n}\n\nconst UserPage = (props: any) => {\n  const Global = useContext(GlobalContext)\n\n  const pageId = useMemo(\n    () => props.match.params.id,\n    [props.match]\n  )\n  const isAuto = useMemo(\n    () => props.match.params.auto === 'auto',\n    [props.match]\n  )\n  const [loading, setLoading] = useState(false)\n  const [stylePath, setStylePath] = useState('')\n\n  useEffect(() => {\n    Global.updateClientWidth()\n  })\n\n  useEffect(() => {\n    setLoading(true)\n    loadFile('/sources/' + pageId + '/root.json')\n      .then((data) => {\n        const rootData: Root = JSON.parse(data)\n        Global.setRoot(rootData.root)\n        return rootData.root\n      }).then(root => {\n        setStylePath(root + pageId + '.css')\n        return root\n      }).then(root => {\n        Promise.all([\n          loadFile(root + 'config.json?q=' + Math.random())\n            .then(config => Global.setConfig(JSON.parse(config))),\n          loadFile(root + 'metadata.json?q=' + Math.random())\n            .then(metadata => Global.setMetadata(JSON.parse(metadata)))\n        ]).then(_ => {\n          setLoading(false)\n        }).catch(e => {\n          console.error(e)\n        })\n      })\n  }, [pageId])\n\n  if (loading) {\n    return <div>loading</div>\n  } else {\n    try {\n      document.title = Global.config ? Global.config.info.title : ''\n      return (\n        <div>\n          <link rel=\"stylesheet\" type=\"text/css\" href={stylePath} />\n          { isAuto ? <Auto rootName={pageId} /> : <Maker rootName={pageId} /> }\n        </div>\n      )\n    } catch {\n      return <div>{'出错啦QAQ'}</div>\n    }\n  }\n}\n\nconst WithRouterUserPage = withRouter(UserPage)\n\nReactDOM.render(\n  <React.StrictMode>\n    <TopRoute />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}